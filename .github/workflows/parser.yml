name: Automated Data Collection

on:
  # Run every 6 hours
  schedule:
    - cron: '0 */6 * * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      channels:
        description: 'Channels to collect (comma-separated, optional - uses env default)'
        required: false
        type: string

jobs:
  collect-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history to preserve git commits
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create session directory
        run: mkdir -p session

      - name: Restore Telegram session
        if: secrets.TELEGRAM_SESSION
        run: |
          echo "${{ secrets.TELEGRAM_SESSION }}" | base64 -d > session/z_worlds_collector_session.session
        continue-on-error: true

      - name: Create .env file
        run: |
          echo "API_ID=${{ secrets.API_ID }}" >> .env
          echo "API_HASH=${{ secrets.API_HASH }}" >> .env
          echo "PHONE_NUMBER=${{ secrets.PHONE_NUMBER }}" >> .env

          # Use custom channels if provided via workflow_dispatch, otherwise use secret
          if [ -n "${{ github.event.inputs.channels }}" ]; then
            echo "TARGET_CHANNELS=${{ github.event.inputs.channels }}" >> .env
          else
            echo "TARGET_CHANNELS=${{ vars.TARGET_CHANNELS }}" >> .env
          fi

          echo "INITIAL_FETCH_LIMIT=${{ vars.INITIAL_FETCH_LIMIT || '1000' }}" >> .env

      - name: Run parser
        id: parser
        run: |
          echo "Starting data collection..."
          python parser.py
          echo "Data collection completed"
        env:
          PYTHONIOENCODING: utf-8

      - name: Save Telegram session
        if: always()
        run: |
          if [ -f "session/z_worlds_collector_session.session" ]; then
            echo "Session file found, saving to artifacts"
            base64 session/z_worlds_collector_session.session > session_backup.txt
          fi
        continue-on-error: true

      - name: Upload session backup
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: telegram-session-backup-${{ github.run_number }}
          path: session_backup.txt
          retention-days: 30
        continue-on-error: true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_number }}
          path: logs/
          retention-days: 7
        continue-on-error: true

      - name: Commit and push changes
        if: success()
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          # Add data and index files
          git add data/

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: automated data collection - $(date -u '+%Y-%m-%d %H:%M:%S UTC')

            ðŸ¤– Automated by GitHub Actions
            Run: ${{ github.run_number }}
            Workflow: ${{ github.workflow }}"

            git push
          fi
        continue-on-error: true

      - name: Print collection summary
        if: always()
        run: |
          echo "==================================="
          echo "ðŸ“Š Collection Summary"
          echo "==================================="
          echo "Workflow Run: ${{ github.run_number }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""

          # Show data directory size
          if [ -d "data" ]; then
            echo "Data directory size:"
            du -sh data/ || echo "Unable to calculate size"
            echo ""
            echo "Channels collected:"
            ls -1 data/ || echo "No channels found"
          fi

          echo "==================================="
